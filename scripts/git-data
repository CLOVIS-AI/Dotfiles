#!/usr/bin/env bash

function check_repo() {
	[[ "$(git rev-parse --is-inside-work-tree 2>/dev/null)" == 'true' ]] ||
		[[ "$(git rev-parse --is-bare-repository 2>/dev/null)" == 'true' ]]
}

function tracked() {
	# From https://stackoverflow.com/a/9753364/5666171
	git for-each-ref --format='%(upstream:short)' "$(git symbolic-ref -q HEAD)"
}

function current() {
	git rev-parse --abbrev-ref HEAD
}

function is_merging() {
	git rev-parse -q --verify MERGE_HEAD >/dev/null
}

function is_rebasing() {
	# shellcheck disable=SC2010
	ls "$(git data --git-dir)" | grep rebase >/dev/null
}

function remote_branch_exists() {
	if [[ $2 == "" ]]; then
		branch="$1"
	else
		branch="$1/$2"
	fi
	git show-branch "remotes/$branch" >/dev/null 2>/dev/null
}

case $1 in
--check-repo)
	check_repo
	;;
--tracked)
	tracked
	;;
--current)
	current
	;;
--root)
	git rev-parse --show-toplevel
	;;
--git-dir)
	git rev-parse --git-dir
	;;
--is-merging)
	is_merging
	;;
--is-rebasing)
	is_rebasing
	;;
--remote-branch-exists)
	shift
	remote_branch_exists "$@"
	;;
--ahead-after | --status)
	check_repo || exit 0
	current="$(current 2>/dev/null)"
	[[ $? == 128 ]] && echo "no branch" && exit 0
	tracked="$(tracked)"
	tracked_exists=$(remote_branch_exists "$tracked" && echo "true")

	RET="${current}"
	is_merging && RET+=" merge"
	is_rebasing && RET+=" rebase"
	[[ $tracked_exists == "true" ]] && RET+=" $(git rev-list "$tracked..$current" | wc -l)↑"
	[[ $tracked_exists == "true" ]] && RET+=" $(git rev-list "$current..$tracked" | wc -l)↓"
	[[ $tracked_exists != "true" ]] && RET+=" × gone"
	# shellcheck disable=SC2001
	sed <<<"$RET" \
		's/ 0↑ 0↓/ ⮁/;
		s/ 0[↑↓]//g;
		s/ merge/ ⤮ currently merging/;
		s/ rebase/ ⟳ currently rebasing/;
		s/HEAD/detached HEAD/'
	;;
esac
