#!/usr/bin/env bash

. announce-menu --import

function _in_path() {
	command -v "$1" >/dev/null 2>&1
}

_sdkman_path="$HOME/.sdkman/bin/sdkman-init.sh"
[[ -f $_sdkman_path ]] && . "$_sdkman_path"

function _install_sdkman_kscript() {
	if declare -f sdk >/dev/null; then
		echo "SDKMAN is already installed..."
	else
		echo "SDKMAN is not installed..."
		if ! _in_path curl; then
			echo "'curl' is not installed..."
			packager install curl || exit 1
		fi

		if ! _in_path zip; then
			echo "'zip' is not installed..."
			packager install zip || exit 1
		fi

		if ! _in_path unzip; then
			echo "'unzip' is not installed..."
			packager install unzip || exit 1
		fi

		curl -L "https://get.sdkman.io" | bash
		source "$_sdkman_path"
	fi

	curl -L "https://git.io/fpF1K" | SDKMAN_DIR="$HOME/.sdkman" bash

	source "$_sdkman_path"
}

if ! _in_path kscript; then
	echo "This script needs 'kscript', which is missing from your system."

	echo "If you are a human, type 'ENTER' now. Otherwise, automatic installation will start in 10 seconds..."
	read -t 10 -r _user_choice || _user_choice="no-user-here"
	case "$_user_choice" in
	no-user-here)
		echo "This shell is not interactive. Installing 'SDKMAN' and 'kscript'..."
		_install_sdkman_kscript
		;;
	*)
		announce-menu --title "Necessary dependency 'kscript' is missing. What do you want to do?" \
			"packager:Install 'kscript' with Packager (requires root & the existence of a kscript package)" \
			"sdkman:Install SDKMAN and 'kscript' (does not require root)" \
			"stop:Give up and quit"
		case $(announce-menu-get) in
		packager)
			packager install kscript
			;;
		sdkman)
			_install_sdkman_kscript
			;;
		*)
			exit 167
			;;
		esac
		;;
	esac
fi

exec kscript "$@"
