#!/usr/bin/env bash

. announce-menu --import

function _in_path() {
	command -v "$1" >/dev/null 2>&1
}

function _install_sdkman() {
	_sdkman_path="$HOME/.sdkman/bin/sdkman-init.sh"
	[[ -f $_sdkman_path ]] && . "$_sdkman_path"

	if declare -f sdk >/dev/null; then
		echo "SDKMAN is already installed..."
	else
		echo "SDKMAN is not installed..."

		if ! _in_path curl; then
			echo "'curl' is not installed..."
			packager install curl || exit 1
		fi

		if ! _in_path zip; then
			echo "'zip' is not installed..."
			packager install zip || exit 1
		fi

		if ! _in_path unzip; then
			echo "'unzip' is not installed..."
			packager install unzip || exit 1
		fi

		curl -L "https://get.sdkman.io" | bash
		source "$_sdkman_path"
	fi

	curl -L "https://git.io/fpF1K" | bash
}

if ! _in_path kscript; then
	announce-menu --title "'kscript' is necessary to run this script." \
		"packager:Install 'kscript' with Packager (recommended for distros which are up-to-date; Arch,...)" \
		"sdkman:Install 'kscript' with SDKMAN (a non-root package manager, recommended for distros which are not up-to-date; Debian, Ubuntu...)" \
		"stop:Do not run this script."

	case $(announce-menu-get) in
	packager) packager install kscript ;;
	sdkman) _install_sdkman ;;
	stop) exit 0 ;;
	esac
fi

exec kscript "$@"
