#!/bin/bash

MERGE_COMMAND="git merge"
hash compgen 2>/dev/null && compgen -A command "git-ci" >/dev/null && MERGE_COMMAND="git ci --merge"

# ============================================ R E V I E W =========================================================

announce "Starting Git Review..."

announce -nn "Source:"
git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ \1/' -e 's/^[[:space:]]*//'

announce -nn "Target:"
read -r -i master -e TARGET

COMMITS=$(git log --reverse --pretty=format:'%h' $TARGET..)

announce "There are $(echo $COMMITS | wc -w) commits. How do you want to review them?"
echo " 0. One-by-one"
echo " 1. As one"
announce -nn "Your choice:"
read -r REVIEW_MODE

function as-one {
    git diff $TARGET..

    announce -nn "Accept? (y/N)"
    read -r ACCEPT

    case $ACCEPT in
    y|yes)
        echo "Merge accepted.";;
    *)
        echo "Aborting."
        exit 0;;
    esac
}

function one-by-one {
    for COMMIT in $COMMITS
    do
        git show --show-signature $COMMIT

        announce -nn "Accept? (y/N)"
        read -r ACCEPT

        case $ACCEPT in
        y|yes)
            echo "Commit $COMMIT accepted.";;
        *)
            echo "Aborting."
            exit 0;;
        esac
    done
    announce "You accepted all commits."
}

case $REVIEW_MODE in
0)
    one-by-one;;
1)
    as-one;;
*)
    echo "Wrong input."
    exit 1;;
esac

# ======================================= M E R G E ================================================================

announce "Choose your merge method:"
echo " 0. Merge     Recommended for beginners"
echo " 1. Rebase    Cleaner, but harder"
echo " 2. Squash    Not recommended"
announce -nn "Your choice:"
read -r MERGE_METHOD

function merge {
    OPTIONS="--stat --no-squash"

    if git merge-base --is-ancestor "$TARGET" HEAD
    then
        announce -nn "This branch can be fast-forwarded. Do you want to? (y/N)"
        read -r ALLOW_FF

        case $ALLOW_FF in
        y|yes)
            echo "Allowing fast-forward..."
            OPTIONS+=" --ff-only";;
        *)
            echo "Forbidding fast-forward..."
            OPTIONS+=" --no-ff";;
        esac
    fi

    announce "$MERGE_COMMAND $OPTIONS $TARGET"
    # shellcheck disable=SC2086
    $MERGE_COMMAND $OPTIONS "$TARGET"
}

function rebase {
    announce "git rebase --interactive $TARGET"
    git rebase -i "$TARGET"
    announce "git checkout $TARGET"
    git checkout "$TARGET"
    announce "git merge --ff-only $TARGET"
    git merge --ff-only "$TARGET"
}

function squash {
    announce "$MERGE_COMMAND --stat --squash $TARGET"
    $MERGE_COMMAND --stat --squash "$TARGET"
}

case $MERGE_METHOD in
0|m|merge)
    merge;;
1|r|rebase)
    rebase;;
2|s|squash)
    squash;;
*)
    echo "Wrong input.";;
esac
