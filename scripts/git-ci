#!/bin/bash

announce "Choose your style:"
echo " 0. Classic"
echo " 1. Angular"
echo " 2. ESLint"
announce -nn "Your choice:"
read -r STYLE

function classic {
    announce -nn "What did you do?"
    read -r MSG

    git commit -m "$MSG"
}

function angular {
    announce "Choose the type:"
    echo " 0. build      build system, dependencies"
    echo " 1. ci         CI/CD"
    echo " 2. docs       documentation changes (internal or public)"
    echo " 3. feat       new features, backward-compatible"
    echo " 4. fix        fix problems, backward-compatible"
    echo " 5. perf       better performances, backward-compatible"
    echo " 6. refactor   changes to the product, backward-compatible"
    echo " 7. style      grammar, coding style, linting..."
    echo " 8. test       new tests, refactoring tests..."
    echo " 9. breaking   backward-incompatible changes"
    announce -nn "Your choice:"
    read -r CHOICE_TYPE

    case $CHOICE_TYPE in
    0|build)
        TYPE=build;;
    1|ci)
        TYPE=ci;;
    2|docs)
        TYPE=docs;;
    3|feat)
        TYPE=feat;;
    4|fix)
        TYPE=fix;;
    5|perf)
        TYPE=perf;;
    6|refactor)
        TYPE=refactor;;
    7|style)
        TYPE=style;;
    8|test)
        TYPE=test;;
    9|breaking)
        TYPE=breaking;;
    *)
        echo "Wrong input."
        angular;;
    esac

    announce "Last used scopes:"
    for i in $(git log --oneline --abbrev-commit | cut -d ' ' -f 1 --complement | grep --color=auto -E '^(build|ci|docs|feat|fix|perf|refactor|style|test|breaking)\(.*\)' | sed -r -e 's/\).*$//' -e 's/^.*\(//'| awk '!x[$0]++' | head -10)
    do echo " -  $i"; done
    announce -nn "Scope of the commit:"
    read -r SCOPE

    announce -nn "What did you do?"
    read -r MESSAGE

    git commit -m "$TYPE($SCOPE): $MESSAGE"
}

function eslint {
    announce "Choose the type:"
    echo " 0. Build      build system, dependencies, CI/CD"
    echo " 1. Upgrade    dependency upgrades"
    echo " 2. Docs       documentation changes (internal or public)"
    echo " 3. New        new features, backward-compatible"
    echo " 4. Fix        fix problems, backward-compatible"
    echo " 5. Update     improvements, backward-compatible"
    echo " 6. Breaking   backward-incompatible changes"
    announce -nn "Your choice:"
    read -r CHOICE_TYPE

    case $CHOICE_TYPE in
    0|build)
        TYPE=Build;;
    1|upgrade)
        TYPE=Upgrade;;
    2|docs)
        TYPE=Docs;;
    3|feat)
        TYPE=New;;
    4|fix)
        TYPE=Fix;;
    5|update)
        TYPE=Update;;
    6|breaking)
        TYPE=Breaking;;
    *)
        echo "Wrong input."
        eslint;;
    esac

    announce -nn "What did you do?"
    read -r MESSAGE
    
    announce -nn "Fixes (optional):"
    read -r FIX
    [[ $FIX != "" ]] && MESSAGE+=" (fixes $FIX)"
    
    announce -nn "References (optional):"
    read -r REF
    [[ $REF != "" ]] && MESSAGE+=" (refs $REF)"

    git commit -m "$TYPE: $MESSAGE"
}

case $STYLE in
0|classic)
    classic
    ;;
1|angular)
    angular
    ;;
2|eslint)
    eslint
    ;;
*)
    echo "Wrong input."
    exit 1;;
esac
