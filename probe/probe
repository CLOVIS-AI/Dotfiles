#!/usr/bin/env bash

. cl-depend announce-menu "probe"
. announce-menu --import

# ===================== IP SCAN ==========================================

function select_interface() {
	. cl-depend ip "probe/select_interface"

	interfaces=$(ip link show | grep -v '    ' | cut -f 2 -d ' ' | cut -f 1 -d ':')

	# shellcheck disable=SC2086
	announce-menu --title "Which interface do you want to scan?" \
		$interfaces
	interface=$(announce-menu-get)
}

function select_network_from_interface() {
	. cl-depend ip "probe/select_network_from_interface"

	addresses=$(ip address list "$1" | grep inet | tr -s ' ' | cut -f 3 -d ' ')

	# shellcheck disable=SC2086
	announce-menu -d ' ' --title "Which address do you want to use?" \
		$addresses
	address=$(announce-menu-get)
}

function ip_scan() {
	. cl-depend nmap "probe/scan_ip"

	select_interface
	select_network_from_interface "$interface"

	echo -en "   Scanning...\r"
	nmap_options=""
	grep <<<"$address" ":" >/dev/null && nmap_options="-6"
	nmap -sn $nmap_options "$address" 2>/dev/null | grep "Nmap scan report" | cut -f 5-6 -d ' ' | sort | column -t
}

# ==================== Network Scan ======================================

function net_scan() {
	. cl-depend iftop "probe/scan_net"

	select_interface
	select_network_from_interface "$interface"

	announce -nn "Give an estimation of the maximum throughput, ending with K, M, or G:"
	read throughput

	announce sudo iftop -i "$interface" -F "$address" -m "$throughput"
}

# ==================== Logins scan =======================================

function login_scan() {
	</var/log/auth.log grep -a \
		-e "unlocked login keyring" \
		-e "ssh" \
		-e "sudo:.*COMMAND="
}

# ==================== MAIN MENU =========================================

announce-menu --title "Welcome to Probe. What do you want to do?" \
	"ip:Find other connected machines" \
	"network-traffic:Display the network usage (requires root access)" \
	"logins:Scan recent logins"
case $(announce-menu-get) in
ip)
	ip_scan
	;;
network-traffic)
	net_scan
	;;
logins)
	login_scan
	;;
esac
